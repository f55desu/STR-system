# Generated by Django 4.0.4 on 2022-05-22 10:23

import STR.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Audience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audience_number', models.IntegerField(unique=True, verbose_name='Номер аудитории')),
                ('audience_type', models.CharField(choices=[('Лекционная', 'Лекционная'), ('Лабораторная', 'Лабораторная')], default='', max_length=70, verbose_name='Тип аудитории')),
                ('capacity', models.IntegerField(verbose_name='Вместимость')),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus_name', models.CharField(max_length=75, unique=True, verbose_name='Название корпуса')),
                ('address', models.CharField(max_length=175, verbose_name='Адрес корпуса')),
            ],
            options={
                'verbose_name': 'Корпус',
                'verbose_name_plural': 'Корпуса',
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=320, unique=True, verbose_name='Содержание критерия')),
            ],
            options={
                'verbose_name': 'Критерий',
                'verbose_name_plural': 'Критерии',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=320, unique=True, verbose_name='Название')),
                ('education_form', models.CharField(max_length=170, verbose_name='Форма обучения')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=320, verbose_name='Название')),
                ('type', models.CharField(choices=[('Лекция', 'Лекция'), ('Практика', 'Практика')], default='Лекция', max_length=50, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Дисциплина',
                'verbose_name_plural': 'Дисциплины',
                'unique_together': {('name', 'type')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('surname', models.CharField(default='Christ', max_length=320, verbose_name='Фамилия')),
                ('name', models.CharField(default='Jesus', max_length=320, verbose_name='Имя')),
                ('lastname', models.CharField(blank=True, default=None, max_length=320, null=True, verbose_name='Отчество')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Права суперпользователя')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Права администратора')),
                ('is_active', models.BooleanField(default=False, verbose_name='Учётная запись активна')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Преподаватель')),
                ('is_student', models.BooleanField(default=False, verbose_name='Студент')),
                ('date_registration', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время регистрации')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='Дата и время последнего входа в систему')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', STR.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.CreateModel(
            name='Teacher_Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.subject', verbose_name='Дисциплина')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.teacher', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Преподаватель_Дисциплина',
                'verbose_name_plural': 'Преподаватели_Дисциплины',
                'unique_together': {('teacher', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subgroup_number', models.SmallIntegerField(choices=[(1, 1), (2, 2)], default=1, verbose_name='Подгруппа')),
                ('time', models.CharField(choices=[('C 8:00 до 9:30', 'C 8:00 до 9:30'), ('С 9:45 до 11:15', 'С 9:45 до 11:15'), ('С 11:30 до 13:15', 'С 11:30 до 13:15'), ('С 13:30 до 15:00', 'С 13:30 до 15:00'), ('С 15:15 до 16:45', 'С 15:15 до 16:45'), ('С 17:00 до 18:30', 'С 17:00 до 18:30')], default='', max_length=40, verbose_name='Время')),
                ('weekday', models.CharField(choices=[('Понедельник', 'Понедельник'), ('Вторник', 'Вторник'), ('Среда', 'Среда'), ('Четверг', 'Четверг'), ('Пятница', 'Пятница'), ('Суббота', 'Суббота')], default='', max_length=20, verbose_name='День недели')),
                ('even_week', models.CharField(choices=[('Числитель', 'Числитель'), ('Знаменатель', 'Знаменатель')], default='', max_length=20, verbose_name='Четность')),
                ('semester_year', models.CharField(max_length=70, verbose_name='Семестр')),
                ('audience', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.audience', verbose_name='Аудитория')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.group', verbose_name='Группа')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.subject', verbose_name='Дисциплина')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.teacher', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписания',
            },
        ),
        migrations.AddField(
            model_name='audience',
            name='campus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STR.campus', verbose_name='Корпус'),
        ),
        migrations.CreateModel(
            name='Subject_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(default=1, verbose_name='Семестр')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.group', verbose_name='Группа')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Дисциплина_Группа',
                'verbose_name_plural': 'Дисциплины_Группы',
                'unique_together': {('subject', 'group', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('subgroup_number', models.SmallIntegerField(choices=[(1, 1), (2, 2)], default=1, verbose_name='Подгруппа')),
                ('group', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='STR.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended', models.BooleanField()),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.schedule')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.student')),
            ],
            options={
                'verbose_name': 'Посещаемость',
                'verbose_name_plural': 'Посещаемость',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.PositiveSmallIntegerField(default=0, verbose_name='Оценка')),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.criterion', verbose_name='Критерий')),
                ('teacher_subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.teacher_subject', verbose_name='Преподаватель_Дисциплина')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='STR.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
                'unique_together': {('teacher_subject', 'student', 'criterion', 'grade')},
            },
        ),
    ]
