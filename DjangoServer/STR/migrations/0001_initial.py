# Generated by Django 3.2.7 on 2021-11-19 18:45

import STR.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=999, unique=True, verbose_name='Содержание критерия')),
            ],
            options={
                'verbose_name': 'Критерий',
                'verbose_name_plural': 'Критерии',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('type', models.CharField(choices=[('Лекция', 'Лекция'), ('Практика', 'Практика')], default='Лекция', max_length=50, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Дисциплина',
                'verbose_name_plural': 'Дисциплины',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('lastname', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('email', models.CharField(max_length=30, unique=True, verbose_name='Почта')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('surname', models.CharField(default='Christ', max_length=50, verbose_name='Фамилия')),
                ('name', models.CharField(default='Jesus', max_length=50, verbose_name='Имя')),
                ('lastname', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Права администратора')),
                ('is_active', models.BooleanField(default=False, verbose_name='Учётная запись активна')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Права суперпользователя')),
                ('date_registration', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время регистрации')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата и время последнего входа в систему')),
                ('group_name', models.ForeignKey(db_column='group_name', default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='STR.group', to_field='name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
            managers=[
                ('objects', STR.managers.StudentManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher_Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STR.subject')),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STR.teacher')),
            ],
            options={
                'verbose_name': 'Преподаватель_Дисциплина',
                'verbose_name_plural': 'Преподаватели_Дисциплины',
            },
        ),
        migrations.CreateModel(
            name='Subject_Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.PositiveSmallIntegerField(default=1, verbose_name='Семестр')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STR.group', to_field='name')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STR.subject')),
            ],
            options={
                'verbose_name': 'Дисциплина_Группа',
                'verbose_name_plural': 'Дисциплины_Группы',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.PositiveSmallIntegerField(verbose_name='Оценка')),
                ('criterion_name', models.ForeignKey(db_column='criterion_name', on_delete=django.db.models.deletion.CASCADE, to='STR.criterion', to_field='name')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('teacher_subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='STR.teacher_subject')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
            },
        ),
    ]
